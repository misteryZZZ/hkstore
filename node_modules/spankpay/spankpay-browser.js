let scriptLoadPromise

function injectScript() {
  return new Promise((res, rej) => {
    script = document.createElement('script')
    script.type = 'text/javascript'
    script.async = true
    script.onload = res
    script.onerror = rej
    script.src = 'https://pay.spankchain.com/spankpay.js'
    script.setAttribute('data-no-init', 'true')
    document.getElementsByTagName('head')[0].appendChild(script)
  })
}

function getInstance(opts) {
  if (!scriptLoadPromise) {
    scriptLoadPromise = injectScript().then(() => {
      return window.spankpay.init()
    })
  }
  return scriptLoadPromise
}

function deferredMethod(name) {
  return function() {
    return getInstance().then(spankpay => {
      spankpay[name].apply(spankpay, arguments)
    })
  }
}

exports = module.exports = {
  init: opts => {
    if (scriptLoadPromise)
      throw new Error('SpankPay has already been initialized!')
    return getInstance(opts)
  },

  getInstance: getInstance,
  show: deferredMethod('show'),
  on: deferredMethod('on'),
}
